<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.eclipse.basyx.aas.registry</groupId>
	<artifactId>aas-registry</artifactId>
	<packaging>pom</packaging>
	<version>0.3.0-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.9</version>
		<relativePath />
	</parent>

	<properties>
		<testcontainers.version>1.16.2</testcontainers.version>
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<generated.folder>src/generated</generated.folder>
		<springfox-version>3.0.0</springfox-version>
		<swagger.codegen.version>3.0.33</swagger.codegen.version>
		<spring.fox.version>3.0.0</spring.fox.version>
		<openapi.folder.name>open-api</openapi.folder.name>
		<openapi.base.name>Plattform_i40-Registry-and-Discovery-Final-Draft-resolved.yaml</openapi.base.name>
		<openapi.extensions.name>Plattform_i40-Registry-and-Discovery-Extensions.yaml</openapi.extensions.name>
		<openapi.name>Plattform_i40-Registry-and-Discovery.yaml</openapi.name>
		<guava.version>31.0.1-jre</guava.version>
		<maven-plugin.version>3.6.0</maven-plugin.version>
		<maven-project.version>3.0-alpha-2</maven-project.version>
		<mustache.compiler.version>0.9.4</mustache.compiler.version>
		<snakeyaml.version>1.30</snakeyaml.version>

		<aas-registry-plugins.version>${project.version}</aas-registry-plugins.version>

		<docker.maven.plugin.version>0.39.1</docker.maven.plugin.version>

		<docker.image.name>${project.artifactId}</docker.image.name>
		<docker.image.version>${project.version}</docker.image.version>
		<docker.pull.registry>docker.io</docker.pull.registry>
	</properties>

	<modules>
		<module>aas-registry-client</module>
		<module>aas-registry-events</module>
		<module>aas-registry-paths</module>
		<module>aas-registry-compatibility</module>
		<module>aas-registry-plugins</module>
		<module>aas-registry-service-base-model</module>
		<module>aas-registry-service</module>
		<module>aas-registry-service-base-tests</module>
		<module>aas-registry-service-kafka-events</module>
		<module>aas-registry-service-elasticsearch-storage</module>
		<module>aas-registry-service-inmemory-storage</module>
		<module>aas-registry-service-release-kafka-es</module>
		<module>aas-registry-service-release-kafka-mem</module>
		<module>aas-registry-service-release-log-mem</module>
		<module>aas-registry-service-release-log-es</module>
	</modules>

	<developers>
		<developer>
			<name>Gerhard Sonnenberg</name>
			<email>gerhard.sonnenberg@dfki.de</email>
			<organization>DFKI</organization>
			<organizationUrl>https://www.dfki.de</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.basyx.aas.registry</groupId>
					<artifactId>aas-registry-plugins</artifactId>
					<version>${aas-registry-plugins.version}</version>
				</plugin>
				<plugin>
					<groupId>io.swagger.codegen.v3</groupId>
					<artifactId>swagger-codegen-maven-plugin</artifactId>
					<version>${swagger.codegen.version}</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.maven.plugin.version}</version>
				</plugin>
			</plugins>
			
		</pluginManagement>
	</build>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-events</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-paths</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-service-kafka-events</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-service-elasticsearch-storage</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-service-base-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-client</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-service-inmemory-storage</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>aas-registry-service-base-tests</artifactId>
				<scope>test</scope>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-oas</artifactId>
				<version>${spring.fox.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.basyx.aas.registry</groupId>
				<artifactId>aas-registry-util</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugin-tools</groupId>
				<artifactId>maven-plugin-annotations</artifactId>
				<version>${maven-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-project</artifactId>
				<version>${maven-project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>${maven-plugin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.spullara.mustache.java</groupId>
				<artifactId>compiler</artifactId>
				<version>${mustache.compiler.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>dockerbuild</id>
			<activation>
				<!-- This profile is always active if there is a Dockerfile and a user name is given -->
				<file>
					<exists>src/main/docker/Dockerfile</exists>
				</file>
				<property>
					<name>docker.username</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<layers>
								<enabled>true</enabled>
								<includeLayerTools>true</includeLayerTools>
							</layers>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-docker</id>
								<phase>deploy</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<verbose>true</verbose>
							<images>
								<image>
									<name>${docker.username}/${docker.image.name}</name>
									<build>
										<assembly>
											<descriptorRef>artifact</descriptorRef>
										</assembly>
										<dockerFile>Dockerfile</dockerFile>
										<tags>
											<tag>${docker.image.version}</tag>
										</tags>
									</build>
								</image>
							</images>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>